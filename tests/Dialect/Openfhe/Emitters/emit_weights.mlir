// RUN: heir-translate %s --emit-openfhe-pke --weights-file=%t | FileCheck %s

// Tests emitting dense elements attributes to a weights file.

module attributes {scheme.ckks} {
  // CHECK: test_external_weights
  // CHECK-SAME: size_t [[v0:.*]]) {
  // CHECK-NEXT: Weights weights = GetWeightModule("[[FILE:.*]]");
  // CHECK-NEXT: std::vector<int8_t> [[v1:.*]] =
  // CHECK-SAME:    weights.int8_ts["[[v1]]"];
  // CHECK-NEXT: std::vector<int8_t> [[v2:.*]](std::begin([[v1]]) + [[v0]] * 10, std::begin([[v1]]) + [[v0]] * 10 + 64);
  // CHECK-NEXT: return [[v2]];
  func.func @test_external_weights(%arg1: index) -> tensor<64xi8> {
    %cst = arith.constant dense<"0xtensor<10x64xi8>
    %1 = tensor.extract_slice %cst[%arg1, 0] [1, 64] [1, 1] : tensor<10x64xi8> to tensor<64xi8>
    return %1 : tensor<64xi8>
  }
}
